server {
    listen       {{ NGINX_LISTEN }} default_server;
    server_name  {{ NGINX_SERVER_NAME }};
    port_in_redirect off;
    server_name_in_redirect on;
    {{ NGINX_SSL_CONFIG }}
    include      api_conf.d/*.conf;
    set          $proxy_host {{ FLASK_SERVER_NAME }};

    if ($proxy_host = "") {
        set $proxy_host $host;
    }

    location /_nginx/ {
        access_log off;
        return 200 "OK";
    }

    location = /stub_status {
        stub_status;
    }

    location = /auth/ {
        internal;

        proxy_pass              {{ FLASK_SERVICE_URL }};
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        referer $http_referer;
        proxy_set_header        X-Original-URI $request_uri;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-Host $proxy_host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port 443;
        proxy_set_header        X-Forwarded-Proto https;
        {% for header in headers %}
        proxy_set_header        {{ header }} $http_{{ header.lower().replace('-', '_') }};
        {% endfor %}
    }

    {% for blueprint in blueprints %}
    location {{ blueprint }} {
        proxy_pass              {{ FLASK_SERVICE_URL }};
        proxy_set_header        X-Original-URI $request_uri;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-Host $proxy_host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port 443;
        proxy_set_header        X-Forwarded-Proto https;
    }
    {% endfor %}

    error_page 401 = @error401;
    location @error401 {
        return 302 https://$proxy_host$login_url;
    }
}
